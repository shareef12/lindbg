command
{
    "command": <cmd_enum>
}

get_commandline
{
    "status": <enum>,
    "commandline": "<commandline>"
}

get_modules
{
    "status": <enum>,
    "modules": [
        {"start": "<start>", "end": "<end>", "name": "<name>"}
        {"start": "<start>", "end": "<end>", "name": "<name>"}
    ]
}

get_registers
{
    "status": <enum>,
    "registers: {
        "rax": <rax>
        "rbx": <rbx>
        "rcx": <rcx>
        "rdx": <rdx>
        ...
    }
}

get_bytes
{
    "status": <enum>,
    "bytes": "<base64-bytes>"
}

set_bytes
{
    "status": <enum>
}

# stopval is exit status on exit or signal enum on stopped
go
{
    "status": <enum>,
    "stopval": <enum>,
    "exited": <bool>
}

step_instruction
{
    "status": <enum>,
    "stopval": <enum>,
    "exited": <bool>
}
